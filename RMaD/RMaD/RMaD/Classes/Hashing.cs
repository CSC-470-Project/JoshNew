namespace RMaD.Classes
{
    using BCrypt.Net;
    /// <summary>
    /// Class for implementing BCrypt Hashing Algorithms
    /// </summary>
    internal class Hashing
    {
        /// <summary>
        /// Generate salt
        /// </summary>
        /// <returns>Random salt generated by BCrypt in a string</returns>
        private static string GetRandomSalt()
        {
            return BCrypt.GenerateSalt(12);
        }

        /// <summary>
        /// Hash password using BCrypt
        /// </summary>
        /// <param name="password">Password to be Hashed</param>
        /// <returns>Hashed Password in a string</returns>
        public static string HashPassword(string password)
        {
            return BCrypt.HashPassword(password, GetRandomSalt());
        }

        /// <summary>
        /// Validates password with the correct hashed password
        /// </summary>
        /// <param name="password">Password to compare</param>
        /// <param name="correctHash">Stored hash value for password</param>
        /// <returns>Returns true if the password matches the hash or false if it does not</returns>
        public static bool ValidatePassword(string password, string correctHash)
        {
            return BCrypt.Verify(password, correctHash);
        }
    }
}
